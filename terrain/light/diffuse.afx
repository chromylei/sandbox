
technique [
    name = "diffuse"
    ps_main="ps_main"
    vs_main="vs_main"
    class_name="DiffuseEffect"
           ];

struct DirLight {
  vec4 dir;
  vec4 diffuse;
  vec4 ambient;
};

[uniform_func="SetPVW"] uniform mat4 pvw;
[uniform_func="SetWorld"] uniform mat4 world;
[uniform_func="SetDiffuse"] uniform vec4 diffuse;
[uniform_func="SetDirLight"] uniform DirLight light;

exchange struct VsOutput {
  [semantic="position" system="true"]
  vec4 position;
  vec2 coordtex;
  vec4 normal;
};

exchange struct VSInput {
  vec4 position;
  vec2 coordtex;
  vec4 normal;
};

VsOutput vs_main(VSInput input) {
  VsOutput o;
  o.position = pvw * input.position;
  o.coordtex = input.coordtex;
  o.normal = world * input.normal;
  return o;
}

[system="true" semantic="target"]
vec4 ps_main(VsOutput o) {
  float diffuse_factor = dot(normalize(o.normal.xyz), -light.direction.xyz);
  vec3 light_factor = light.ambient.xyz + light.diffuse.xyz * diffuse_factor;
  return vec4(light_factor.xyz * diffuse.xyz, 1.0);
}

