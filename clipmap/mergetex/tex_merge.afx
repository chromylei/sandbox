
technique [
    name = "tex_merge"
    ps_main="ps_main"
    vs_main="vs_main"
    class_name="TexMergeEffect"
           ];

struct DirLight {
  vec4 dir;
  vec2 texcoord;
};


[uniform_func="SetHeightTex1"] uniform Texture2D heighttex1;
[uniform_func="SetHeightTex2"] uniform Texture2D heighttex2;
[uniform_func="SetHeightTex3"] uniform Texture2D heighttex3;
[uniform_func="SetHeightTex4"] uniform Texture2D heighttex4;
[uniform_func="SetViewpos"] uniform vec4 view_pos;

exchange struct VsOutput {
  [semantic="position" system="true"]
  vec4 position;
  vec2 texcoord;
};

exchange struct VSInput {
  vec4 position;
  vec2 texcoord;
};

VsOutput vs_main(VSInput input) {
  VsOutput o;
  o.position = input.position;
  o.texcoord = input.texcoord;
  return o;
}

[system="true" semantic="target"]
vec4 ps_main(VsOutput o) {
  if (o.position.x <= view_pos.x) {
    if (o.position.z <= view_pos.z) {
      return sample2D(heighttex1, o.texcoord);
    } else {
      return sample2D(heighttex4, o.texcoord);
    }
  } else {
    if (o.position.z <= view_pos.z) {
      return sample2D(heighttex2, o.texcoord);
    } else {
      return sample2D(heighttex3, o.texcoord);
    }
  }
}

